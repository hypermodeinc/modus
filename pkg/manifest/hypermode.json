{
  "$id": "https://manifest.hypermode.com/hypermode.json",
  "$schema": "http://json-schema.org/draft-07/schema",
  "oneOf": [
    {
      "$comment": "This is the new format.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "$schema": {
          "type": "string",
          "format": "uri",
          "description": "The schema that the document should conform to.",
          "markdownDescription": "The schema that the document should conform to.\n\nReference: https://json-schema.org/"
        },
        "models": {
          "type": "object",
          "propertyNames": {
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(?:-[a-zA-Z0-9]+)*$"
          },
          "additionalProperties": {
            "oneOf": [
              {
                "type": "object",
                "required": ["sourceModel", "provider", "host"],
                "additionalProperties": false,
                "properties": {
                  "task": {
                    "type": "string",
                    "deprecated": true,
                    "minLength": 1,
                    "enum": ["classification", "embedding", "generation"],
                    "description": "Training intent of the model, such as 'classification' or 'embedding'.\n\nThis field is deprecated and no longer used.  It will be removed in a future version of the schema."
                  },
                  "sourceModel": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Name of the source model, using the id or path assigned by the provider."
                  },
                  "provider": {
                    "type": "string",
                    "minLength": 1,
                    "$comment": "More providers can be added to the enum as needed.",
                    "enum": ["hugging-face"],
                    "description": "Source provider of the model."
                  },
                  "host": {
                    "type": "string",
                    "const": "hypermode",
                    "description": "Host for the model.  Either 'hypermode', or the name of an external host as defined in the 'hosts' section."
                  },
                  "dedicated": {
                    "type": "boolean",
                    "default": false,
                    "description": "Whether to have the model be dedicated to the project, or shared."
                  }
                }
              },
              {
                "type": "object",
                "required": ["host"],
                "additionalProperties": false,
                "properties": {
                  "task": {
                    "type": "string",
                    "deprecated": true,
                    "minLength": 1,
                    "enum": ["classification", "embedding", "generation"],
                    "description": "Training intent of model, such as 'classification' or 'embedding'.\n\nThis field is deprecated and no longer used.  It will be removed in a future version of the schema."
                  },
                  "sourceModel": {
                    "type": "string",
                    "minLength": 1,
                    "description": "Name of the source model, using the id or path assigned by the provider."
                  },
                  "host": {
                    "type": "string",
                    "not": {
                      "const": "hypermode"
                    },
                    "minLength": 1,
                    "maxLength": 63,
                    "pattern": "^[a-zA-Z0-9]+(?:-[a-zA-Z0-9]+)*$",
                    "description": "Host for the model.  Either 'hypermode', or the name of an external host as defined in the 'hosts' section."
                  },
                  "path": {
                    "type": "string",
                    "minLength": 1,
                    "$comment": "todo: validate path with a pattern regex",
                    "description": "Path to the model endpoint, applied to the 'baseUrl' of the host."
                  }
                }
              }
            ]
          }
        },
        "hosts": {
          "type": "object",
          "propertyNames": {
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(?:-[a-zA-Z0-9]+)*$"
          },
          "additionalProperties": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "default": "http",
                "enum": ["http", "postgresql", "dgraph"],
                "description": "Type for the host, such as 'http', 'postgresql', 'dgraph'",
                "markdownDescription": "Type for the host, such as 'http', 'postgresql', 'dgraph'.\n\nReference: https://docs.hypermode.com/define-hosts"
              }
            },
            "allOf": [
              {
                "if": {
                  "properties": { "type": { "const": "http" } }
                },
                "then": {
                  "properties": {
                    "type": {
                      "const": "http"
                    },
                    "baseUrl": {
                      "type": "string",
                      "format": "uri",
                      "minLength": 1,
                      "pattern": "^https?://\\S+/$",
                      "description": "Base URL for connections to the host.  Must end with a trailing slash.  If providing the entire URL, use the endpoint field instead.",
                      "markdownDescription": "Base URL for connections to the host.  Must end with a trailing slash.  If providing the entire URL, use the `endpoint` field instead.\n\nReference: https://docs.hypermode.com/define-hosts"
                    },
                    "endpoint": {
                      "type": "string",
                      "format": "uri",
                      "minLength": 1,
                      "pattern": "^https?://\\S+$",
                      "description": "Full URL endpoint for connections to the host.  If providing the base URL, use the baseUrl field instead.",
                      "markdownDescription": "Full URL endpoint for connections to the host.  If providing the base URL, use the `baseUrl` field instead.\n\nReference: https://docs.hypermode.com/define-hosts"
                    },
                    "headers": {
                      "type": "object",
                      "propertyNames": {
                        "type": "string",
                        "minLength": 1,
                        "pattern": "^[\\w!#$%&'*+-.^`|~]+$"
                      },
                      "additionalProperties": {
                        "type": "string",
                        "minLength": 1
                      },
                      "description": "Headers to include in requests to the host.",
                      "markdownDescription": "Headers to include in requests to the host.\n\nReference: https://docs.hypermode.com/define-hosts"
                    },
                    "queryParameters": {
                      "type": "object",
                      "$comment": "Query parameter keys and values will be encoded when used, so there is no need to validate a pattern in the schema.",
                      "propertyNames": {
                        "type": "string",
                        "minLength": 1
                      },
                      "additionalProperties": {
                        "type": "string",
                        "minLength": 1
                      },
                      "description": "Query parameters to include in requests to the host.",
                      "markdownDescription": "Query parameters to include in requests to the host.\n\nReference: https://docs.hypermode.com/define-hosts"
                    },
                    "additionalProperties": false
                  },
                  "$comment": "Either baseUrl or endpoint must be provided, but not both.",
                  "allOf": [
                    {
                      "oneOf": [
                        {
                          "required": ["baseUrl"]
                        },
                        {
                          "required": ["endpoint"]
                        }
                      ],
                      "not": {
                        "required": ["baseUrl", "endpoint"]
                      }
                    }
                  ]
                }
              },
              {
                "if": {
                  "properties": { "type": { "const": "postgresql" } },
                  "required": ["type"]
                },
                "then": {
                  "properties": {
                    "type": {
                      "const": "postgresql"
                    },
                    "connString": {
                      "type": "string",
                      "minLength": 1,
                      "pattern": "^postgres(?:ql)?:\\/\\/(.*?@)?([0-9a-zA-Z.-]*?)(:\\d+)?(\\/[0-9a-zA-Z.-]+)?(\\?.+)?$",
                      "description": "The PostgreSQL connection string in URI format.",
                      "markdownDescription": "The PostgreSQL connection string in URI format.\n\nReference: https://docs.hypermode.com/define-hosts"
                    }
                  },
                  "required": ["connString"],
                  "additionalProperties": false
                }
              },
              {
                "if": {
                  "properties": { "type": { "const": "dgraph" } },
                  "required": ["type"]
                },
                "then": {
                  "properties": {
                    "type": {
                      "const": "dgraph"
                    },
                    "grpcTarget": {
                      "type": "string",
                      "minLength": 1,
                      "pattern": "^[a-zA-Z0-9]+(?:-[a-zA-Z0-9.]+)*:\\d+$",
                      "description": "The gRPC target for connections to Dgraph, such as \"localhost:9080\" or \"your-server-1234567.grpc.us-east-1.aws.cloud.dgraph.io:443\".",
                      "markdownDescription": "The gRPC target for connections to Dgraph, such as \"localhost:9080\" or \"your-server-1234567.grpc.us-east-1.aws.cloud.dgraph.io:443\".\n\nReference: https://docs.hypermode.com/define-hosts"
                    },
                    "key": {
                      "type": "string",
                      "minLength": 1,
                      "description": "API key for Dgraph.",
                      "markdownDescription": "API key for Dgraph.\n\nReference: https://docs.hypermode.com/define-hosts"
                    }
                  },
                  "required": ["grpcTarget"],
                  "additionalProperties": false
                }
              }
            ]
          }
        },
        "collections": {
          "type": "object",
          "description": "Collection definitions, for natural language search.",
          "propertyNames": {
            "type": "string",
            "minLength": 1,
            "maxLength": 63,
            "pattern": "^[a-zA-Z0-9]+(?:-[a-zA-Z0-9]+)*$"
          },
          "additionalProperties": {
            "type": "object",
            "description": "Collection configuration.",
            "additionalProperties": false,
            "properties": {
              "searchMethods": {
                "type": "object",
                "description": "Search methods for the collection.",
                "propertyNames": {
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 63,
                  "pattern": "^[a-zA-Z0-9]+(?:-[a-zA-Z0-9]+)*$"
                },
                "additionalProperties": {
                  "type": "object",
                  "description": "Search method configuration for the collection.  If an index configuration is not specified, a default sequential index will be created automatically.",
                  "additionalProperties": false,
                  "properties": {
                    "embedder": {
                      "type": "string",
                      "minLength": 1,
                      "description": "Name of the embedding function to call in the collection."
                    },
                    "index": {
                      "description": "Index configuration for the collection.",
                      "oneOf": [
                        {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "sequential",
                              "default": "sequential",
                              "description": "Type of the index."
                            }
                          },
                          "required": ["type"]
                        },
                        {
                          "type": "object",
                          "additionalProperties": false,
                          "properties": {
                            "type": {
                              "type": "string",
                              "const": "hnsw",
                              "default": "sequential",
                              "description": "Type of the index."
                            },
                            "options": {
                              "type": "object",
                              "description": "Options for the HNSW index.",
                              "minProperties": 1,
                              "additionalProperties": false,
                              "properties": {
                                "efConstruction": {
                                  "type": "integer",
                                  "default": 15,
                                  "description": "The number of candidate vertices to evaluate during construction.\n\nDefault: 15"
                                },
                                "maxLevels": {
                                  "type": "integer",
                                  "default": 5,
                                  "description": "The maximum number of levels in the structure.\n\nDefault: 5"
                                }
                              }
                            }
                          },
                          "required": ["type"]
                        }
                      ]
                    }
                  },
                  "required": ["embedder"]
                }
              }
            }
          }
        }
      }
    },
    {
      "$comment": "This is the old format. We will remove this in the future.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "$schema": {
          "type": "string",
          "format": "uri",
          "description": "The schema that the document should conform to.",
          "markdownDescription": "The schema that the document should conform to.\n\nReference: https://json-schema.org/"
        },
        "hosts": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["name", "endpoint"],
            "additionalProperties": false,
            "properties": {
              "name": {
                "type": "string",
                "minLength": 1,
                "maxLength": 63,
                "pattern": "^[a-zA-Z0-9]+(?:-[a-zA-Z0-9]+)*$",
                "description": "Internal name of your host. Used for indicating the host of a model or for a connection.",
                "markdownDescription": "Internal name of your host. Used for indicating the host of a model or for a connection.\n\nReference: https://docs.hypermode.com/define-hosts"
              },
              "endpoint": {
                "type": "string",
                "format": "uri",
                "minLength": 1,
                "description": "URL and base path for connections to the host.",
                "markdownDescription": "URL and base path for connections to the host.\n\nReference: https://docs.hypermode.com/define-hosts"
              },
              "authHeader": {
                "type": "string",
                "minLength": 1,
                "description": "Authorization header name for connections to the host.",
                "markdownDescription": "Authorization header name for connections to the host.\n\nReference: https://docs.hypermode.com/define-hosts"
              }
            }
          }
        },
        "models": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["name", "task", "sourceModel", "provider", "host"],
            "additionalProperties": false,
            "properties": {
              "host": {
                "type": "string",
                "minLength": 1,
                "maxLength": 63,
                "pattern": "^[a-zA-Z0-9]+(?:-[a-zA-Z0-9]+)*$",
                "description": "Runtime provider of model. Can be dynamically deployed models on Hypermode or a project-defined host.",
                "markdownDescription": "Runtime provider of model. Can be dynamically deployed models on Hypermode or a project-defined host.\n\nReference: https://docs.hypermode.com/define-models"
              },
              "name": {
                "type": "string",
                "minLength": 1,
                "maxLength": 63,
                "pattern": "^[a-zA-Z0-9]+(?:-[a-zA-Z0-9]+)*$",
                "description": "Internal name of your AI model. Used for indicating the model to use in an API call.",
                "markdownDescription": "Internal name of your AI model. Used for indicating the model to use in an API call.\n\nReference: https://docs.hypermode.com/define-models"
              },
              "provider": {
                "type": "string",
                "minLength": 1,
                "description": "Source location of model, such as 'hugging-face' or 'openai'.",
                "markdownDescription": "Source location of model, such as 'hugging-face' or 'openai'.\n\nReference: https://docs.hypermode.com/define-models"
              },
              "sourceModel": {
                "type": "string",
                "minLength": 1,
                "description": "Relative path of model within provider.",
                "markdownDescription": "Relative path of model within provider.\n\nReference: https://docs.hypermode.com/define-models"
              },
              "task": {
                "type": "string",
                "minLength": 1,
                "description": "Training intent of model, such as 'classification' or 'embedding'.",
                "markdownDescription": "Training intent of model, such as 'classification' or 'embedding'.\n\nReference: https://docs.hypermode.com/define-models"
              }
            }
          }
        }
      }
    }
  ]
}
