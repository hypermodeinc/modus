name: "Release Go SDK"
on:
  push:
    tags:
      - "sdk/go/v*"
permissions:
  contents: "write"
jobs:
  release:
    name: Release
    runs-on: warp-ubuntu-latest-x64-4x
    steps:
      - name: "Validate version"
        if: ${{ !startsWith(github.ref_name, 'sdk/go/v') }}
        run: 'echo "Modus Go SDK version must start with `sdk/go/v` && exit 1'
      - uses: actions/checkout@v4
        with:
          ref: "${{ github.ref_name }}"
      - name: Parse SDK Version
        id: parse_sdk_version
        run: |
          echo "sdk_version=$(echo '${{ github.ref_name }}' | cut -d'/' -f 3)" >> $GITHUB_OUTPUT
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          cache-dependency-path: "./sdk/go/go.sum"
          go-version-file: "./sdk/go/go.mod"
      - name: Prepare Release
        working-directory: sdk/go
        run: ./scripts/prepare-release.sh ${{ steps.parse_sdk_version.outputs.sdk_version }}
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            sdk/go/sdk.json
            sdk/go/templates_go_${{ steps.parse_sdk_version.outputs.sdk_version }}.tar.gz
          prerelease: ${{ contains(steps.parse_sdk_version.outputs.sdk_version, '-') }}
          make_latest: false
  release-info:
    needs: release
    name: "Generate Release Info"
    runs-on: warp-ubuntu-latest-x64-2x
    steps:
      - uses: actions/checkout@v4
        with:
          ref: "${{ github.ref_name }}"
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ">=22"
          registry-url: "https://registry.npmjs.org"
      - name: Install Dependencies
        working-directory: tools/release-info
        run: npm ci
      - name: Build
        working-directory: tools/release-info
        run: npm run build
      - name: Run
        working-directory: tools/release-info
        run: node dist/index.js
      - name: Push to R2 Bucket
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          version: "3.83.0"
          workingDirectory: "tools/release-info"
          preCommands: |
            cat modus-latest.json
            cat modus-preview.json
            cat modus-all.json
            cat modus-preview-all.json
          command: |
            r2 object put releases/modus-latest.json modus-latest.json
            r2 object put releases/modus-preview.json modus-preview.json
            r2 object put releases/modus-all.json modus-all.json
            r2 object put releases/modus-preview-all.json modus-preview-all.json
