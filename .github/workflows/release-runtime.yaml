name: "Release Runtime"
on:
  push:
    tags:
      - "runtime/v*"
permissions:
  contents: "write"
jobs:
  release:
    name: Release
    runs-on: warp-ubuntu-latest-x64-4x
    steps:
      - name: "Validate version"
        if: ${{ !startsWith(github.ref_name, 'runtime/v') }}
        run: 'echo "Modus Runtime version must start with `runtime/v` && exit 1'
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: "${{ github.ref_name }}"
      - uses: actions/setup-go@v5
        with:
          go-version: 1.23
          check-latest: true
          cache-dependency-path: runtime/go.sum
      - uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser-pro
          version: "2.3.2"
          args: release --clean -f ./runtime/.goreleaser.yaml
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          GORELEASER_KEY: "${{ secrets.GORELEASER_KEY }}"
          MACOS_SIGN_P12: "${{ secrets.MACOS_SIGN_P12 }}"
          MACOS_SIGN_PASSWORD: "${{ secrets.MACOS_SIGN_PASSWORD }}"
          MACOS_NOTARY_ISSUER_ID: "${{ secrets.MACOS_NOTARY_ISSUER_ID }}"
          MACOS_NOTARY_KEY_ID: "${{ secrets.MACOS_NOTARY_KEY_ID }}"
          MACOS_NOTARY_KEY: "${{ secrets.MACOS_NOTARY_KEY }}"
  release-info:
    needs: release
    name: "Generate Release Info"
    runs-on: warp-ubuntu-latest-x64-2x
    steps:
      - uses: actions/checkout@v4
        with:
          ref: "${{ github.ref_name }}"
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ">=22"
          registry-url: "https://registry.npmjs.org"
      - name: Install Dependencies
        working-directory: tools/release-info
        run: npm ci
      - name: Build
        working-directory: tools/release-info
        run: npm run build
      - name: Run
        working-directory: tools/release-info
        run: node dist/index.js
      - name: Push to R2 Bucket
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          version: "3.83.0"
          workingDirectory: "tools/release-info"
          preCommands: |
            cat modus-latest.json
            cat modus-preview.json
            cat modus-all.json
            cat modus-preview-all.json
          command: |
            r2 object put releases/modus-latest.json modus-latest.json
            r2 object put releases/modus-preview.json modus-preview.json
            r2 object put releases/modus-all.json modus-all.json
            r2 object put releases/modus-preview-all.json modus-preview-all.json
