# This workflow will test all Go projects in the repository
name: ci-go-test
on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
jobs:
  get-dirs:
    if: github.event_name == 'pull_request'
    name: find go projects
    runs-on: ubuntu-latest
    outputs:
      dirs: ${{ steps.get-dirs.outputs.dirs }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Search for go.mod files
        id: get-dirs
        run: echo "dirs=$(find . -name 'go.mod' -exec dirname {} \; | jq -Rsc 'split("\n")[:-1]')" >> ${GITHUB_OUTPUT}

  go-test:
    needs: get-dirs
    name: test
    runs-on: warp-ubuntu-latest-x64-4x
    strategy:
      matrix:
        dir: ${{ fromJson(needs.get-dirs.outputs.dirs) }}
    defaults:
      run:
        working-directory: ${{ matrix.dir }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          cache-dependency-path: "${{ matrix.dir }}/go.sum"
          go-version-file: "${{ matrix.dir }}/go.mod"
      - name: Generate Code
        run: go generate ./...
      - name: Run Unit Tests
        run: |
          go install github.com/jstemmer/go-junit-report/v2@latest
          go test -v -race 2>&1 ./... | go-junit-report -set-exit-code -iocopy -out report.xml
      - name: Generate Test Summary
        if: always()
        uses: test-summary/action@v2
        with:
          paths: "${{ matrix.dir }}/report.xml"
