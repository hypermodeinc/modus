name: ci-golang-tests
on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
jobs:
  golang-tests:
    name: test
    runs-on: warp-ubuntu-latest-x64-4x
    if: github.event.pull_request.draft == false
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          check-latest: true
      - name: Run Unit Tests
        run: |
          go install github.com/jstemmer/go-junit-report/v2@latest
          go test -v -race -coverprofile=coverage.out -covermode=atomic 2>&1 ./... | go-junit-report -set-exit-code > report.xml
      - name: Upload coverage to CodeClimate
        uses: paambaati/codeclimate-action@v5.0.0
        env:
          CC_TEST_REPORTER_ID: 02835d6da5b9f2afa90740278445d368e2d95633d21d2f84b47d7f54317210cf
        with:
          debug: true
          prefix: hmruntime
          coverageLocations: |
            ${{github.workspace}}/coverage.out:gocov
      - name: Generate Test Summary
        if: always()
        uses: test-summary/action@v2
        with:
          paths: "report.xml"
